<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://githubloon.github.io/news/article-57169.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>实现单例模式的八种方法</title>
        <meta name="description" content="一.单例模式的定义： 单例模式确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例。 二.单例模式的特点 　1、单例类只能有一个实例。　 　2、单例类必须自己创建自己的唯一实例。 　3、单例" />
        <link rel="icon" href="/assets/website/img/githubloon/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Github Loon节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://githubloon.github.io/news/article-57169.htm" />
    <meta property="og:site_name" content="Github Loon节点订阅官网" />
    <meta property="og:title" content="实现单例模式的八种方法" />
    <meta property="og:image" content="https://githubloon.github.io/uploads/20240820/d5e257b1c73f2b705acf05bf0336c682.webp" />
        <meta property="og:release_date" content="2025-02-15T05:23:48" />
    <meta property="og:updated_time" content="2025-02-15T05:23:48" />
        <meta property="og:description" content="一.单例模式的定义： 单例模式确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例。 二.单例模式的特点 　1、单例类只能有一个实例。　 　2、单例类必须自己创建自己的唯一实例。 　3、单例" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="实现单例模式的八种方法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google fonts -->
    <link href="//fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/githubloon/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9MPH6JPQCT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-9MPH6JPQCT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="header-saas">
        <!-- header -->
        <header id="site-header" class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg stroke">
                    <a class="navbar-brand" href="/">
                                        <span>Github Loon</span>
                                        </a>
                    <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                        <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                        </span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav ml-auto">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                    <!-- toggle switch for light and dark theme -->
                    <div class="mobile-position">
                        <nav class="navigation">
                            <div class="theme-switch-wrapper">
                                <label class="theme-switch" for="checkbox">
                                    <input type="checkbox" id="checkbox">
                                    <div class="mode-container">
                                        <i class="gg-sun"></i>
                                        <i class="gg-moon"></i>
                                    </div>
                                </label>
                            </div>
                        </nav>
                    </div>
                    <!-- //toggle switch for light and dark theme -->
                </nav>
            </div>
        </header>
        <!-- //header -->
    </div>
    <div class="innerblock">
    </div>
    <!-- contact-form 2 -->
    <section class="w3l-contact-2 py-5" id="contact">
        <div class="container py-lg-4 py-md-3 py-2">
            <div class="title-content text-center">
                <h1 class="title-toobig">实现单例模式的八种方法</h1>
                <p class="mt-md-4 mt-3 mx-lg-5 px-lg-5">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </p>
            </div>
    </section>
    <!-- section -->
    <section class="w3l-index3" id="about">
        <div class="midd-w3 py-5">
            <div class="container py-lg-5 py-md-3 py-2">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-kimbie-light"> <p>一.单例模式的定义：</p> <p>单例模式确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例。</p> <p>二.单例模式的特点<br /> 　1、单例类只能有一个实例。　<br /> 　2、单例类必须自己创建自己的唯一实例。<br /> 　3、单例类必须给所有其他对象提供这一实例。<br /> 　<br /> 三.线程安全问题：</p> <p>一方面在获取单例的时候，要保证不能产生多个实例对象，后面会详细讲到五种实现方式；</p> <p>另一方面，在使用单例对象的时候，要注意单例对象内的实例变量是会被多线程共享的，推荐使用无状态的对象，不会因为多个线程的交替调度而破坏自身状态导致线程安全问题，比如我们常用的VO，DTO等（局部变量是在用户栈中的，而且用户栈本身就是线程私有的内存区域，所以不存在线程安全问题）。</p> <p>四.实现单例模式的八种方式：</p> <p><strong>1.饿汉式（静态常量）【可用】</strong></p> <pre><code>public class Singleton{       private final static Singleton INSTANCE=new Singleton();      private Singlrton(){}      public static Singleton getInstance(){          return INSTANCE;      } } </code></pre> <p>优点：这种写法比较简单，就是在类装载的时候就完成实例化。避免了线程同步问题。</p> <p>缺点：在类装载的时候就完成实例化，没有达到Lazy Loading的效果。如果从始至终从未使用过这个实例，则会造成内存的浪费。</p> <p><strong>2.饿汉式（静态代码块）【可用】</strong></p> <pre><code>public class Singleton{                private static Singleton instance;        static{              instance=new Singleton();         }         private Singleton(){}         public static Singleton getInstance(){         } } </code></pre> <p>这种方式和上面的方式其实类似，只不过将类实例化的过程放在了静态代码块中，也是在类装载的时候，就执行静态代码块中的代码，初始化类的实例。优缺点和上面是一样的。</p> <p><strong>3.懒汉式（线程不安全）【不可用】</strong></p> <pre><code>public static Singleton{       private static Singletons singleton;      private Singleton(){      public static Singleton getInstance(){          if(singleton==null){              singleton=new Singleton();            }          return singleton;      } } </code></pre> <p>这种写法起到了LazyLoading的效果，但是只能在单线程下使用。如果在多线程下，一个线程进入了if (singleton ==null)判断语句块，还未来得及往下执行，另一个线程也通过了这个判断语句，这时便会产生多个实例。所以在多线程环境下不可使用这种方式。</p> <p><strong>4.懒汉式（线程安全，同步方法）【不推荐用】</strong></p> <pre><code>public class Singleton{      private static Singleton singleton;      private Singleton(){}      public static synchronized Singleton getInstance(){           if(singleton==null){              singleton=new Singleton();              }            return singleton;      } } </code></pre> <p>解决上面第三种实现方式的线程不安全问题，做个线程同步就可以了，于是就对getInstance()方法进行了线程同步。</p> <p>缺点：效率太低了，每个线程在想获得类的实例时候，执行getInstance()方法都要进行同步。而其实这个方法只执行一次实例化代码就够了，后面的想获得该类实例，直接return就行了。方法进行同步效率太低要改进。</p> <p><strong>5.懒汉式（线程安全，同步代码块）【不可用】</strong></p> <pre><code>public class Singleton{      private static Singleton singleton;      private Singleton(){}      public static  Singleton getInstance(){           if(singleton==null){               synchronized (Singleton.class){                   singleton=new Singleton();                 }            }            return singleton;      } } </code></pre> <p>由于第四种实现方式同步效率太低，所以摒弃同步方法，改为同步产生实例化的的代码块。但是这种同步并不能起到线程同步的作用。跟第3种实现方式遇到的情形一致，假如一个线程进入了if (singleton ==null)判断语句块，还未来得及往下执行，另一个线程也通过了这个判断语句，这时便会产生多个实例。</p> <p><strong>6.双重检查【推荐使用】</strong></p> <pre><code>public class Singleton{      private static volatile Singleton singleton;      private Singleton(){}      public static  Singleton getInstance(){           if(singleton==null){               synchronized (Singleton.class){                      if(singleton==null){                           singleton=new Singleton();                         }               }            }            return singleton;      } } </code></pre> <p>Double-Check概念对于多线程开发者来说不会陌生，如代码中所示，我们进行了两次if (singleton ==null)检查，这样就可以保证线程安全了。这样，实例化代码只用执行一次，后面再次访问时，判断if(singleton == null)，直接return实例化对象。</p> <p>优点：线程安全；延迟加载；效率较高。</p> <p><strong>7.静态内部类【推荐使用】</strong></p> <pre><code>public class Singleton{      private Singlrton(){}      private static class SingletonInstance{             private static  final Singleton INSTANCE=new Singleton();      }      public static Singleton getInstance(){          return SingletonInstance.INSTANCE;      } } </code></pre> <p>这种方式跟饿汉式方式采用的机制类似，但又有不同。两者都是采用了类装载的机制来保证初始化实例时只有一个线程。不同的地方在饿汉式方式是只要Singleton类被装载就会实例化，没有Lazy-Loading的作用，而静态内部类方式在Singleton类被装载时并不会立即实例化，而是在需要实例化时，调用getInstance方法，才会装载SingletonInstance类，从而完成Singleton的实例化。</p> <p>类的静态属性只会在第一次加载类的时候初始化，所以在这里，JVM帮助我们保证了线程的安全性，在类进行初始化时，别的线程是无法进入的。</p> <p>优点：避免了线程不安全，延迟加载，效率高。</p> <p><strong>8.枚举【推荐使用】</strong></p> <pre><code>public enum Singleton{        INSTANCE;        public void whateverMethod(){        } } </code></pre> <p>借助JDK1.5中添加的枚举来实现单例模式。不仅能避免多线程同步问题，而且还能防止反序列化重新创建新的对象。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-56597.htm">中国最大的宠物粮生产厂家在哪里呀（中国最大的宠物粮生产厂家在哪里呀视频）</a></p>
                                        <p>下一个：<a href="/news/article-57170.htm">有没有可以免费领养宠物的软件（可以免费领养宠物的软件叫什么）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-28641.htm" title="spring.profiles.active的使用">spring.profiles.active的使用</a></li>
                        <li class="py-2"><a href="/news/article-45632.htm" title="动物疫苗接种方法及注意事项视频教学下载 动物疫苗接种方法及注意事项视频教学下载">动物疫苗接种方法及注意事项视频教学下载 动物疫苗接种方法及注意事项视频教学下载</a></li>
                        <li class="py-2"><a href="/news/article-51684.htm" title="莼菜豆腐汤的做法窍门(莼菜豆腐汤的做法大全)">莼菜豆腐汤的做法窍门(莼菜豆腐汤的做法大全)</a></li>
                        <li class="py-2"><a href="/news/article-55481.htm" title="无货源开网店是什么套路（开无货源网店真的赚钱吗）">无货源开网店是什么套路（开无货源网店真的赚钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-10-latest-loon-node.htm" title="「2月10日」最高速度18M/S，2025年Github Loon每天更新免费机场订阅节点链接">「2月10日」最高速度18M/S，2025年Github Loon每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-29104.htm" title="女人养猫会怎么样呢（女人养猫咪会命不好吗）">女人养猫会怎么样呢（女人养猫咪会命不好吗）</a></li>
                        <li class="py-2"><a href="/news/article-46617.htm" title="java利用RestTemplate 发送post请求">java利用RestTemplate 发送post请求</a></li>
                        <li class="py-2"><a href="/news/article-57169.htm" title="实现单例模式的八种方法">实现单例模式的八种方法</a></li>
                        <li class="py-2"><a href="/news/article-48092.htm" title="宠物粮食加工厂需要执照吗知乎 宠物粮食加工厂需要执照吗知乎">宠物粮食加工厂需要执照吗知乎 宠物粮食加工厂需要执照吗知乎</a></li>
                        <li class="py-2"><a href="/news/article-43651.htm" title="被宠物猫抓伤轻微出血（被宠物猫抓伤轻微出血多长时间内打针）">被宠物猫抓伤轻微出血（被宠物猫抓伤轻微出血多长时间内打针）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- //section -->    
        <!-- footer17 -->
    <section class="footer-17">
        <div class="footer17_sur py-5">
            <div class="copyright text-center">
                <div class="container">
                    <p class="copy-footer-29">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        Github Loon节点订阅官网 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                &#10548;
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </div>
    </section>
    <!-- //footer17 -->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/githubloon/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/githubloon/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <!-- pricing tabs js -->
    <script src="/assets/website/js/frontend/githubloon/tabs.js"></script>
    <!-- owlcarousel -->
    <script src="/assets/website/js/frontend/githubloon/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 2,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- script for tesimonials agency carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-agency").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials agency carousel slider -->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/githubloon/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <script src="/assets/website/js/frontend/githubloon/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>