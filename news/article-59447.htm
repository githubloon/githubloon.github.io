<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://githubloon.github.io/news/article-59447.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Go语言实践模式 &#8211; 函数选项模式(Functional Options Pattern)</title>
        <meta name="description" content="什么是函数选项模式 大家好，我是小白，有点黑的那个白。 最近遇到一个问题，因为业务需求，需要对接三方平台. 而三方平台提供的一些HTTP(S)接口都有统一的密钥生成规则要求. 为此我们封装了一个独立的" />
        <link rel="icon" href="/assets/website/img/githubloon/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Github Loon节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://githubloon.github.io/news/article-59447.htm" />
    <meta property="og:site_name" content="Github Loon节点订阅官网" />
    <meta property="og:title" content="Go语言实践模式 &#8211; 函数选项模式(Functional Options Pattern)" />
    <meta property="og:image" content="https://githubloon.github.io/uploads/20240820/b70c063137195cafec9a2902ad42d288.webp" />
        <meta property="og:release_date" content="2025-02-19T06:38:09" />
    <meta property="og:updated_time" content="2025-02-19T06:38:09" />
        <meta property="og:description" content="什么是函数选项模式 大家好，我是小白，有点黑的那个白。 最近遇到一个问题，因为业务需求，需要对接三方平台. 而三方平台提供的一些HTTP(S)接口都有统一的密钥生成规则要求. 为此我们封装了一个独立的" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Go语言实践模式 &#8211; 函数选项模式(Functional Options Pattern)">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google fonts -->
    <link href="//fonts.googleapis.com/css2?family=DM+Sans:wght@400;700&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/githubloon/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9MPH6JPQCT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-9MPH6JPQCT');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="header-saas">
        <!-- header -->
        <header id="site-header" class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg stroke">
                    <a class="navbar-brand" href="/">
                                        <span>Github Loon</span>
                                        </a>
                    <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                        <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                        </span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav ml-auto">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                    <!-- toggle switch for light and dark theme -->
                    <div class="mobile-position">
                        <nav class="navigation">
                            <div class="theme-switch-wrapper">
                                <label class="theme-switch" for="checkbox">
                                    <input type="checkbox" id="checkbox">
                                    <div class="mode-container">
                                        <i class="gg-sun"></i>
                                        <i class="gg-moon"></i>
                                    </div>
                                </label>
                            </div>
                        </nav>
                    </div>
                    <!-- //toggle switch for light and dark theme -->
                </nav>
            </div>
        </header>
        <!-- //header -->
    </div>
    <div class="innerblock">
    </div>
    <!-- contact-form 2 -->
    <section class="w3l-contact-2 py-5" id="contact">
        <div class="container py-lg-4 py-md-3 py-2">
            <div class="title-content text-center">
                <h1 class="title-toobig">Go语言实践模式 &#8211; 函数选项模式(Functional Options Pattern)</h1>
                <p class="mt-md-4 mt-3 mx-lg-5 px-lg-5">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </p>
            </div>
    </section>
    <!-- section -->
    <section class="w3l-index3" id="about">
        <div class="midd-w3 py-5">
            <div class="container py-lg-5 py-md-3 py-2">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2 id="什么是函数选项模式">什么是函数选项模式</h2> <p>大家好，我是小白，有点黑的那个白。</p> <p>最近遇到一个问题，因为业务需求，需要对接三方平台.</p> <p>而三方平台提供的一些HTTP(S)接口都有统一的密钥生成规则要求.</p> <p>为此我们封装了一个独立的包 xxx-go-sdk 以便维护和对接使用.</p> <p>其中核心的部分是自定义HTTP Client,如下:</p> <pre><code>type Client struct {}  func (c *Client) do() {       // 实现统一的加密和签名逻辑       // 统一调用net/http }  // 订单列表接口 func (c *Client) OrderList(){       c.do() }   // 订单发货接口 func (c *Client) OrderDelivery(){       c.do() }  // ... 其他接口</code></pre> <p>一些平台会要求appKey/appSecret等信息，所以Client结构体就变成了这样，这时参数还比较少, 而且是必填的参数，我们可以提供构造函数来明确指定。</p> <pre><code>type Client struct {       AppKey     string       AppSecret string }  func NewClient(appKey string, appSecret string) *Client {      c := new(Client)      c.AppKey = appKey      c.AppSecret = appSecret      return c }</code></pre> <p>看起来很满足，但是当我们需要增加一个 Timeout 参数来控制超时呢?</p> <p>或许你会说这还不简单，像下面一样再加一个参数呗</p> <pre><code>type Client struct {       AppKey     string       AppSecret string       Timeout    time.Duration }  func NewClient(appKey string, appSecret string, timeout time.Duration) *Client {      c := new(Client)      c.AppKey = appKey      c.AppSecret = appSecret      c.Timeout = timeout      return c }</code></pre> <p>那再加些其他的参数呢？那构造函数的参数是不是又长又串，而且每个参数不一定是必须的，有些参数我们有会考虑默认值的问题。</p> <p>为此，勤劳但尚未致富的 gophers 们使用了总结一种实践模式</p> <p>首先提取所有需要的参数到一个独立的结构体 Options，当然你也可以用 Configs 啥的.</p> <pre><code>type Options struct {       AppKey       string       AppSecret string }</code></pre> <p>然后为每个参数提供设置函数</p> <pre><code>func WithAppKey(appKey string) func(*Options) {       return func(o *Options) {             o.AppKey = appKey       } }  func WithAppSecret(appSecret string) func(*Options) {       return func(o *Options) {             o.AppSecret = appSecret       } }</code></pre> <p>这样我们就为每个参数设置了独立的设置函数。返回值<code>func(*Options)</code> 看着有点不友好，我们提取下定义为单个<code>Option</code> 调整一下代码</p> <pre><code>type Option func(*Options)  func WithAppKey(appKey string) Option {       return func(o *Options) {             o.AppKey = appKey       } }  func WithAppSecret(appSecret string) Option {       return func(o *Options) {             o.AppSecret = appSecret       } }</code></pre> <p>当我们需要添加更多的参数时，只需要在 Options 添加新的参数并添加新参数的设置函数即可。</p> <p>比如现在要添加新的参数 Timeout</p> <pre><code>type Options struct {       AppKey       string       AppSecret   string       Timeout.     time.Duration // 新增参数 }  // Timeout 的设置函数 func WithTimeout(timeout time.Duration) Option {       return func(o *Options) {             o.Timeout = timeout       } }</code></pre> <p>这样后续不管新增多少参数，只需要新增配置项并添加独立的设置函数即可轻松扩展，并且不会影响原有函数的参数顺序和个数位置等。</p> <p>至此，每个选项是区分开来了，那么怎么作用到我们的 Client 结构体上呢?</p> <p>首先，配置选项都被提取到了 Options 结构体中，所以我们需要调整一下 Client 结构体的参数</p> <pre><code>type Client struct {       options *Options }</code></pre> <p>其次，每一个选项函数返回 Option,那么任意多个就是 ...Option，我们调整一下构造函数 NewClient 的参数形式，改为可变参数，不在局限于固定顺序的几个参数。</p> <pre><code>func NewClient(options ...Option) *Client {     c := new(Client)     c.Options = ?     return c }</code></pre> <p>然后循环遍历每个选项函数，来生成Client结构体的完整配置选项。</p> <pre><code>func NewClient(options ...Option) *Client {      opts := new(Options)      for _, o := range options {           o(opts)     }     c := new(Client)     c.Options = opts     return c }</code></pre> <p>那么怎么调用呢？对于调用方而已，直接在调用构造函数NewClient()的参数内添加自己需要的设置函数(WithXXX)即可</p> <pre><code>client := NewClient(      WithAppKey("your-app-key"),      WithAppSecret("your-app-secret"), )</code></pre> <p>当需要设置超时参数，直接添加 WithTimeout即可,比如设置3秒的超时</p> <pre><code>client := NewClient(      WithAppKey("your-app-key"),      WithAppSecret("your-app-secret"),      WithTimeout(3*time.Second), )</code></pre> <p>配置选项的位置可以任意设置，不需要受常规的固定参数顺序约束。</p> <p>可以看到，这种实践模式主要作用于配置选项，利用函数支持的特性来实现的，为此得名 Functional Options Pattern，优美的中国话叫做「函数选项模式」。</p> <h2 id="总结">总结</h2> <p>最后, 我们总结回顾一下在Go语言中函数选项模式的优缺点</p> <h3 id="优点">优点</h3> <ol> <li>支持多参数;</li> <li>支持参数任意位置顺序;</li> <li>支持默认值设置;</li> <li>向后兼容,扩展性极佳;</li> <li>用户使用行为一致, 体感良好.</li> </ol> <h3 id="缺点">缺点</h3> <blockquote> <p>这是特性,不是缺点 - -!</p> </blockquote> <ol> <li>增加了Options结构和Option定义;</li> <li>针对每个参数都有对应的设置函数,每个选项函数的实现代码量好像多了一些;</li> </ol> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-58885.htm">延吉动物医院在哪里预约体检（延吉市动物园门票多少）</a></p>
                                        <p>下一个：<a href="/news/article-59448.htm">动物医院诊疗活动范围是什么内容（动物医院部门）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-56045.htm" title="被猫爪子勾了一下出了一点血会死吗会感染吗（被猫爪子勾了一下出了一点血需要打疫苗吗）">被猫爪子勾了一下出了一点血会死吗会感染吗（被猫爪子勾了一下出了一点血需要打疫苗吗）</a></li>
                        <li class="py-2"><a href="/news/article-48092.htm" title="宠物粮食加工厂需要执照吗知乎 宠物粮食加工厂需要执照吗知乎">宠物粮食加工厂需要执照吗知乎 宠物粮食加工厂需要执照吗知乎</a></li>
                        <li class="py-2"><a href="/news/article-45631.htm" title="Django获取当前页面url">Django获取当前页面url</a></li>
                        <li class="py-2"><a href="/news/article-33863.htm" title="RecyclerView单层RecyclerView实现点击展开、折叠效果">RecyclerView单层RecyclerView实现点击展开、折叠效果</a></li>
                        <li class="py-2"><a href="/news/article-24407.htm" title="办宠物医院需要什么资质（宠物医院开办批准手续）">办宠物医院需要什么资质（宠物医院开办批准手续）</a></li>
                        <li class="py-2"><a href="/news/article-48453.htm" title="kafka生产者发送消息可靠性">kafka生产者发送消息可靠性</a></li>
                        <li class="py-2"><a href="/news/article-47138.htm" title="新手养猫基础知识知乎（新手养猫入门必备攻略）">新手养猫基础知识知乎（新手养猫入门必备攻略）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-free-node-subscribe-links.htm" title="「11月21日」最高速度18.7M/S，2024年Github Loon每天更新免费机场订阅节点链接">「11月21日」最高速度18.7M/S，2024年Github Loon每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-15-free-subscribe-node.htm" title="「2月15日」最高速度19.7M/S，2025年Github Loon每天更新免费机场订阅节点链接">「2月15日」最高速度19.7M/S，2025年Github Loon每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-free-high-speed-nodes.htm" title="「11月9日」最高速度18.1M/S，2024年Github Loon每天更新免费机场订阅节点链接">「11月9日」最高速度18.1M/S，2024年Github Loon每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- //section -->    
        <!-- footer17 -->
    <section class="footer-17">
        <div class="footer17_sur py-5">
            <div class="copyright text-center">
                <div class="container">
                    <p class="copy-footer-29">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        Github Loon节点订阅官网 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                &#10548;
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- /move top -->
        </div>
    </section>
    <!-- //footer17 -->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/githubloon/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/githubloon/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <!-- pricing tabs js -->
    <script src="/assets/website/js/frontend/githubloon/tabs.js"></script>
    <!-- owlcarousel -->
    <script src="/assets/website/js/frontend/githubloon/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 2,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- script for tesimonials agency carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-agency").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials agency carousel slider -->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/githubloon/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <script src="/assets/website/js/frontend/githubloon/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>